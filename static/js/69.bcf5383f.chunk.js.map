{"version":3,"sources":["utils/formatTime.js","components/HeaderBreadcrumbs.js","components/LightboxModal.js","components/_dashboard/kanban/KanbanTaskCommentList.js","components/_dashboard/kanban/KanbanTaskAttachments.js","components/_dashboard/kanban/KanbanTaskCommentInput.js","components/_dashboard/kanban/KanbanTaskAdd.js","components/_dashboard/kanban/KanbanTaskDetails.js","components/_dashboard/kanban/KanbanTaskCard.js","components/_dashboard/kanban/KanbanColumnToolBar.js","components/_dashboard/kanban/KanbanColumn.js","components/_dashboard/kanban/KanbanColumnAdd.js","pages/dashboard/Kanban.js"],"names":["fDate","date","format","Date","fDateTime","fDateTimeSuffix","fToNow","formatDistanceToNow","addSuffix","HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","LightboxModalStyles","theme","useTheme","isRTL","direction","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","alpha","palette","grey","backgroundImage","styles","backdropFilter","height","padding","spacing","width","justifyContent","marginLeft","borderRadius","shape","outline","borderRadiusSm","left","right","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","useEffect","document","body","style","overflow","toolbarButtons","length","animationDuration","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","KanbanTaskCommentList","comments","useState","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","imagesLightbox","filter","comment","messageType","item","message","Stack","py","px","bgcolor","Avatar","src","avatar","Typography","name","color","createdAt","Box","component","onClick","url","findIndex","index","handleOpenLightbox","id","DropZoneStyle","styled","fontSize","cursor","margin","border","divider","opacity","UploadFile","files","setFiles","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","key","varFadeInRight","p","m","position","Paper","objectFit","top","size","filteredItems","_file","handleRemove","icon","closeFill","Icon","plusFill","KanbanTaskAttachments","attachments","attachment","KanbanTaskCommentInput","MyAvatar","OutlinedInput","fullWidth","multiline","row","placeholder","Tooltip","title","roundAddPhotoAlternate","attach2Fill","Button","defaultTask","description","due","assignee","useDatePicker","dueDate","setDueDate","openPicker","setOpenPicker","startTime","endTime","isSameDays","isSameDay","isSameMonths","isSameMonth","onChangeDueDate","newValue","onOpenPicker","onClosePicker","DisplayTime","typography","KanbanTaskAdd","onAddTask","onCloseAddTask","setName","completed","setCompleted","ClickAwayListener","onClickAway","uuidv4","value","onChange","event","onKeyUp","trim","borderColor","Checkbox","disableRipple","checked","radioButtonOffOutline","checkedIcon","checkmarkCircle2Outline","peopleFill","calendarFill","MobileDateRangePicker","open","onOpen","renderInput","PRIORITIZES","LabelStyle","body2","text","secondary","KanbanTaskDetails","card","onDeleteTask","fileInputRef","useRef","taskCompleted","setTaskCompleted","prioritize","setPrioritize","Drawer","anchor","PaperProps","xs","sm","mr","arrowIosBackFill","startIcon","checkmarkFill","prev","roundThumbUp","current","click","ref","type","trash2Outline","moreHorizontalFill","Divider","Scrollbar","flexWrap","user","alt","ml","TextField","select","option","MenuItem","textTransform","rows","KanbanTaskCard","openDetails","setOpenDetails","handleOpenDetails","handleCloseDetails","handleChangeComplete","draggableId","provided","draggableProps","dragHandleProps","innerRef","boxShadow","customShadows","z1","z16","pt","transition","transitions","create","duration","shortest","pl","bottom","KanbanColumnToolBar","columnName","onDelete","onUpdate","anchorRef","renameRef","setOpen","setValue","focus","handleClose","inputRef","blur","fontWeight","MenuPopover","anchorEl","editFill","KanbanColumn","column","dispatch","useDispatch","enqueueSnackbar","useSnackbar","board","useSelector","state","kanban","cardIds","handleOpenAddTask","handleCloseAddTask","handleDeleteTask","cardId","deleteTask","columnId","handleUpdateColumn","newName","updateColumn","error","console","handleDeleteColumn","a","deleteColumn","handleAddTask","task","addTask","droppableId","droppableProps","cards","pb","KanbanColumnAdd","nameRef","handleCreateColumn","createColumn","minWidth","SkeletonLoad","Array","_","Grid","md","Skeleton","paddingTop","Kanban","getBoard","Page","Container","maxWidth","PATH_DASHBOARD","root","onDragEnd","result","destination","source","newColumnOrder","from","columnOrder","splice","persistColumn","start","columns","finish","startCardIds","updatedStart","finishCardIds","updatedFinish","persistCard","updatedCardIds","updatedColumn","overflowY"],"mappings":"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","file":"static/js/69.bcf5383f.chunk.js","sourcesContent":["import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date) {\n  return format(new Date(date), 'MMMM dd');\n}\n\nexport function fDateTime(date) {\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\n}\n\nexport function fTimestamp(date) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date) {\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n}\n\nexport function fToNow(date) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true\n  });\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// material\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nfunction LightboxModalStyles() {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  const backgroundIcon = (iconName) => ({\n    backgroundSize: '24px 24px',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\n  });\n\n  return (\n    <GlobalStyles\n      styles={{\n        '& .ReactModalPortal': {\n          '& .ril__outer': {\n            backdropFilter: 'blur(8px)',\n            backgroundColor: alpha(theme.palette.grey[900], 0.88)\n          },\n\n          // Toolbar\n          '& .ril__toolbar': {\n            height: 'auto !important',\n            padding: theme.spacing(2, 3),\n            backgroundColor: 'transparent'\n          },\n          '& .ril__toolbarLeftSide': { display: 'none' },\n          '& .ril__toolbarRightSide': {\n            height: 'auto !important',\n            padding: 0,\n            flexGrow: 1,\n            display: 'flex',\n            alignItems: 'center',\n            '& li': {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            '& li:first-of-type': {\n              flexGrow: 1\n            },\n            '& li:not(:first-of-type)': {\n              width: theme.spacing(5),\n              height: theme.spacing(5),\n              justifyContent: 'center',\n              marginLeft: theme.spacing(1),\n              borderRadius: theme.shape.borderRadius\n            }\n          },\n\n          // Button\n          '& button:focus': { outline: 'none' },\n          '& .ril__toolbarRightSide button': {\n            width: '100%',\n            height: '100%',\n            '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\n            '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\n            '&.ril__closeButton': backgroundIcon('close')\n          },\n          '& .ril__navButtons': {\n            padding: theme.spacing(3),\n            borderRadius: theme.shape.borderRadiusSm,\n            '&.ril__navButtonPrev': {\n              left: theme.spacing(2),\n              right: 'auto',\n              ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\n            },\n            '&.ril__navButtonNext': {\n              right: theme.spacing(2),\n              left: 'auto',\n              ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\n            }\n          }\n        }\n      }}\n    />\n  );\n}\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, onClose, ...other }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n  const customStyles = {\n    overlay: {\n      zIndex: 9999\n    }\n  };\n\n  return (\n    <>\n      <LightboxModalStyles />\n\n      {isOpen && (\n        <Lightbox\n          animationDuration={120}\n          mainSrc={images[photoIndex]}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={onClose}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n","import { findIndex } from 'lodash';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n// material\nimport { Stack, Box, Avatar, Typography } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n//\nimport LightboxModal from '../../LightboxModal';\n\n// ----------------------------------------------------------------------\n\nKanbanTaskCommentList.propTypes = {\n  comments: PropTypes.array\n};\n\nexport default function KanbanTaskCommentList({ comments }) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const imagesLightbox = comments.filter((comment) => comment.messageType === 'image').map((item) => item.message);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Stack spacing={3} sx={{ py: 3, px: 2.5, bgcolor: 'background.neutral' }}>\n        {comments.map((comment) => (\n          <Stack key={comment.id} direction=\"row\" spacing={2}>\n            <Avatar src={comment.avatar} sx={{ width: 32, height: 32 }} />\n            <div>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                <Typography variant=\"subtitle2\"> {comment.name}</Typography>\n                <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                  {fToNow(comment.createdAt)}\n                </Typography>\n              </Stack>\n\n              {comment.messageType === 'image' ? (\n                <Box\n                  component=\"img\"\n                  src={comment.message}\n                  onClick={() => handleOpenLightbox(comment.message)}\n                  sx={{ mt: 2, borderRadius: 1 }}\n                />\n              ) : (\n                <Typography variant=\"body2\" sx={{ mt: 0.5 }}>\n                  {comment.message}\n                </Typography>\n              )}\n            </div>\n          </Stack>\n        ))}\n      </Stack>\n\n      <LightboxModal\n        images={imagesLightbox}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onClose={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { findIndex, isString } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\nimport { useState, useCallback } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Paper } from '@mui/material';\n// utils\nimport { MIconButton } from '../../@material-extend';\nimport { varFadeInRight } from '../../animate';\nimport LightboxModal from '../../LightboxModal';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  width: 64,\n  height: 64,\n  fontSize: 24,\n  display: 'flex',\n  cursor: 'pointer',\n  alignItems: 'center',\n  justifyContent: 'center',\n  margin: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  border: `dashed 1px ${theme.palette.divider}`,\n  '&:hover': { opacity: 0.72 }\n}));\n\n// ----------------------------------------------------------------------\n\nfunction UploadFile() {\n  const [files, setFiles] = useState([]);\n\n  const handleRemove = (file) => {\n    const filteredItems = files.filter((_file) => _file !== file);\n    setFiles(filteredItems);\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  return (\n    <>\n      {files.map((file) => {\n        const { name, preview } = file;\n        const key = isString(file) ? file : name;\n\n        return (\n          <Box\n            key={key}\n            {...varFadeInRight}\n            sx={{\n              p: 0,\n              m: 0.5,\n              width: 64,\n              height: 64,\n              borderRadius: 1,\n              overflow: 'hidden',\n              position: 'relative'\n            }}\n          >\n            <Paper\n              variant=\"outlined\"\n              component=\"img\"\n              src={isString(file) ? file : preview}\n              sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n            />\n            <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n              <MIconButton\n                size=\"small\"\n                onClick={() => handleRemove(file)}\n                sx={{\n                  p: '2px',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                  '&:hover': {\n                    bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\n                  }\n                }}\n              >\n                <Icon icon={closeFill} />\n              </MIconButton>\n            </Box>\n          </Box>\n        );\n      })}\n\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <Box component={Icon} icon={plusFill} sx={{ color: 'text.secondary' }} />\n      </DropZoneStyle>\n    </>\n  );\n}\n\nKanbanTaskAttachments.propTypes = {\n  attachments: PropTypes.array.isRequired\n};\n\nexport default function KanbanTaskAttachments({ attachments }) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const imagesLightbox = attachments;\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  const handleCloseLightbox = () => {\n    setOpenLightbox(false);\n  };\n\n  return (\n    <>\n      {attachments.map((attachment) => (\n        <Box\n          component=\"img\"\n          key={attachment}\n          src={attachment}\n          onClick={() => handleOpenLightbox(attachment)}\n          sx={{ width: 64, height: 64, objectFit: 'cover', cursor: 'pointer', borderRadius: 1, m: 0.5 }}\n        />\n      ))}\n\n      <UploadFile />\n\n      <LightboxModal\n        images={imagesLightbox}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onClose={handleCloseLightbox}\n      />\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// material\nimport { Stack, Paper, Button, Tooltip, OutlinedInput } from '@mui/material';\n//\nimport { MIconButton } from '../../@material-extend';\nimport MyAvatar from '../../MyAvatar';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanTaskCommentInput() {\n  return (\n    <Stack direction=\"row\" spacing={2} sx={{ py: 3, px: 2.5 }}>\n      <MyAvatar />\n\n      <Paper variant=\"outlined\" sx={{ p: 1, flexGrow: 1 }}>\n        <OutlinedInput\n          fullWidth\n          multiline\n          row={2}\n          placeholder=\"Type a message\"\n          sx={{ '& fieldset': { display: 'none' } }}\n        />\n\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\" spacing={0.5}>\n            <Tooltip title=\"Add photo\">\n              <MIconButton size=\"small\">\n                <Icon icon={roundAddPhotoAlternate} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n            <Tooltip title=\"Attachment\">\n              <MIconButton size=\"small\">\n                <Icon icon={attach2Fill} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n          </Stack>\n\n          <Button variant=\"contained\">Comment</Button>\n        </Stack>\n      </Paper>\n    </Stack>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { trim } from 'lodash';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport peopleFill from '@iconify/icons-eva/people-fill';\nimport { format, isSameDay, isSameMonth } from 'date-fns';\nimport calendarFill from '@iconify/icons-eva/calendar-fill';\nimport radioButtonOffOutline from '@iconify/icons-eva/radio-button-off-outline';\nimport checkmarkCircle2Outline from '@iconify/icons-eva/checkmark-circle-2-outline';\n// material\nimport { Paper, Stack, Tooltip, Checkbox, Box, OutlinedInput, ClickAwayListener } from '@mui/material';\nimport { MobileDateRangePicker } from '@mui/lab';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst defaultTask = {\n  attachments: [],\n  comments: [],\n  description: '',\n  due: [null, null],\n  assignee: []\n};\n\nexport function useDatePicker({ date }) {\n  const [dueDate, setDueDate] = useState([date[0], date[1]]);\n  const [openPicker, setOpenPicker] = useState(false);\n\n  const startTime = dueDate[0];\n  const endTime = dueDate[1];\n\n  const isSameDays = isSameDay(new Date(startTime), new Date(endTime));\n  const isSameMonths = isSameMonth(new Date(startTime), new Date(endTime));\n\n  const handleChangeDueDate = (newValue) => {\n    setDueDate(newValue);\n  };\n\n  const handleOpenPicker = () => {\n    setOpenPicker(true);\n  };\n\n  const handleClosePicker = () => {\n    setOpenPicker(false);\n  };\n\n  return {\n    dueDate,\n    startTime,\n    endTime,\n    isSameDays,\n    isSameMonths,\n    onChangeDueDate: handleChangeDueDate,\n    openPicker,\n    onOpenPicker: handleOpenPicker,\n    onClosePicker: handleClosePicker\n  };\n}\n\nDisplayTime.propTypes = {\n  isSameDays: PropTypes.bool,\n  isSameMonths: PropTypes.bool,\n  onOpenPicker: PropTypes.func,\n  startTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  endTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  sx: PropTypes.object\n};\n\nexport function DisplayTime({ startTime, endTime, isSameDays, isSameMonths, onOpenPicker, sx }) {\n  const style = {\n    typography: 'caption',\n    cursor: 'pointer',\n    '&:hover': { opacity: 0.72 }\n  };\n\n  if (isSameMonths) {\n    return (\n      <Box onClick={onOpenPicker} sx={{ ...style, ...sx }}>\n        {isSameDays\n          ? format(new Date(endTime), 'dd MMM')\n          : `${format(new Date(startTime), 'dd')} - ${format(new Date(endTime), 'dd MMM')}`}\n      </Box>\n    );\n  }\n  return (\n    <Box onClick={onOpenPicker} sx={{ ...style, ...sx }}>\n      {format(new Date(startTime), 'dd MMM')} - {format(new Date(endTime), 'dd MMM')}\n    </Box>\n  );\n}\n\nKanbanTaskAdd.propTypes = {\n  onAddTask: PropTypes.func,\n  onCloseAddTask: PropTypes.func\n};\n\nexport default function KanbanTaskAdd({ onAddTask, onCloseAddTask }) {\n  const [name, setName] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const {\n    dueDate,\n    startTime,\n    endTime,\n    isSameDays,\n    isSameMonths,\n    onChangeDueDate,\n    openPicker,\n    onOpenPicker,\n    onClosePicker\n  } = useDatePicker({\n    date: [null, null]\n  });\n\n  const handleKeyUpAddTask = (event) => {\n    if (event.key === 'Enter') {\n      if (trim(name) !== '') {\n        onAddTask({ ...defaultTask, id: uuidv4(), name, due: dueDate, completed });\n      }\n    }\n  };\n\n  const handleClickAddTask = () => {\n    if (name) {\n      onAddTask({ ...defaultTask, id: uuidv4(), name, due: dueDate, completed });\n    }\n    onCloseAddTask();\n  };\n\n  const handleChangeCompleted = (event) => {\n    setCompleted(event.target.checked);\n  };\n\n  return (\n    <>\n      <ClickAwayListener onClickAway={handleClickAddTask}>\n        <Paper variant=\"outlined\" sx={{ p: 2 }}>\n          <OutlinedInput\n            multiline\n            size=\"small\"\n            placeholder=\"Task name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            onKeyUp={handleKeyUpAddTask}\n            sx={{\n              '& input': { p: 0 },\n              '& fieldset': { borderColor: 'transparent !important' }\n            }}\n          />\n\n          <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Tooltip title=\"Mark task complete\">\n              <Checkbox\n                disableRipple\n                checked={completed}\n                onChange={handleChangeCompleted}\n                icon={<Icon icon={radioButtonOffOutline} />}\n                checkedIcon={<Icon icon={checkmarkCircle2Outline} />}\n              />\n            </Tooltip>\n\n            <Stack direction=\"row\" spacing={1.5} alignItems=\"center\">\n              <Tooltip title=\"Assign this task\">\n                <MIconButton size=\"small\">\n                  <Icon icon={peopleFill} width={20} height={20} />\n                </MIconButton>\n              </Tooltip>\n\n              {startTime && endTime ? (\n                <DisplayTime\n                  startTime={startTime}\n                  endTime={endTime}\n                  isSameDays={isSameDays}\n                  isSameMonths={isSameMonths}\n                  onOpenPicker={onOpenPicker}\n                />\n              ) : (\n                <Tooltip title=\"Add due date\">\n                  <MIconButton size=\"small\" onClick={onOpenPicker}>\n                    <Icon icon={calendarFill} width={20} height={20} />\n                  </MIconButton>\n                </Tooltip>\n              )}\n\n              <MobileDateRangePicker\n                open={openPicker}\n                onClose={onClosePicker}\n                onOpen={onOpenPicker}\n                value={dueDate}\n                onChange={onChangeDueDate}\n                renderInput={() => {}}\n              />\n            </Stack>\n          </Stack>\n        </Paper>\n      </ClickAwayListener>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState, useRef } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundThumbUp from '@iconify/icons-ic/round-thumb-up';\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport moreHorizontalFill from '@iconify/icons-eva/more-horizontal-fill';\n// material\nimport { MobileDateRangePicker } from '@mui/lab';\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Stack,\n  Drawer,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  MenuItem,\n  TextField,\n  Typography,\n  OutlinedInput\n} from '@mui/material';\n//\nimport Scrollbar from '../../Scrollbar';\nimport { MIconButton, MHidden } from '../../@material-extend';\nimport KanbanTaskCommentList from './KanbanTaskCommentList';\nimport KanbanTaskAttachments from './KanbanTaskAttachments';\nimport KanbanTaskCommentInput from './KanbanTaskCommentInput';\nimport { useDatePicker, DisplayTime } from './KanbanTaskAdd';\n\n// ----------------------------------------------------------------------\n\nconst PRIORITIZES = ['low', 'medium', 'hight'];\n\nKanbanTaskDetails.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  card: PropTypes.object,\n  onDeleteTask: PropTypes.func\n};\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.body2,\n  width: 140,\n  fontSize: 13,\n  flexShrink: 0,\n  color: theme.palette.text.secondary\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanTaskDetails({ card, isOpen, onClose, onDeleteTask }) {\n  const fileInputRef = useRef(null);\n  const [taskCompleted, setTaskCompleted] = useState(card.completed);\n  const [prioritize, setPrioritize] = useState('low');\n\n  const { name, description, due, assignee, attachments, comments } = card;\n\n  const {\n    dueDate,\n    startTime,\n    endTime,\n    isSameDays,\n    isSameMonths,\n    onChangeDueDate,\n    openPicker,\n    onOpenPicker,\n    onClosePicker\n  } = useDatePicker({\n    date: due\n  });\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleToggleCompleted = () => {\n    setTaskCompleted((prev) => !prev);\n  };\n\n  const handleChangePrioritize = (event) => {\n    setPrioritize(event.target.value);\n  };\n\n  return (\n    <>\n      <Drawer open={isOpen} onClose={onClose} anchor=\"right\" PaperProps={{ sx: { width: { xs: 1, sm: 480 } } }}>\n        <Stack p={2.5} direction=\"row\" alignItems=\"center\">\n          <MHidden width=\"smUp\">\n            <Tooltip title=\"Back\">\n              <MIconButton onClick={onClose} sx={{ mr: 1 }}>\n                <Icon icon={arrowIosBackFill} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n          </MHidden>\n\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            color={taskCompleted ? 'primary' : 'inherit'}\n            startIcon={!taskCompleted && <Icon icon={checkmarkFill} width={16} height={16} />}\n            onClick={handleToggleCompleted}\n          >\n            {taskCompleted ? 'Complete' : 'Mark complete'}\n          </Button>\n\n          <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\" flexGrow={1}>\n            <Tooltip title=\"Like this\">\n              <MIconButton size=\"small\">\n                <Icon icon={roundThumbUp} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Attachment\">\n              <MIconButton size=\"small\" onClick={handleAttach}>\n                <Icon icon={attach2Fill} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n            <input ref={fileInputRef} type=\"file\" style={{ display: 'none' }} />\n\n            <Tooltip title=\"Delete task\">\n              <MIconButton onClick={onDeleteTask} size=\"small\">\n                <Icon icon={trash2Outline} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n\n            <Tooltip title=\"More actions\">\n              <MIconButton size=\"small\">\n                <Icon icon={moreHorizontalFill} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n          </Stack>\n        </Stack>\n\n        <Divider />\n\n        <Scrollbar>\n          <Stack spacing={3} sx={{ px: 2.5, py: 3 }}>\n            <OutlinedInput\n              fullWidth\n              multiline\n              size=\"small\"\n              placeholder=\"Task name\"\n              value={name}\n              sx={{\n                typography: 'h6',\n                '& .MuiOutlinedInput-notchedOutline': { borderColor: 'transparent' }\n              }}\n            />\n            <Stack direction=\"row\">\n              <LabelStyle sx={{ mt: 1.5 }}>Assignee</LabelStyle>\n              <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n                {assignee.map((user) => (\n                  <Avatar key={user.id} alt={user.name} src={user.avatar} sx={{ m: 0.5, width: 36, height: 36 }} />\n                ))}\n                <Tooltip title=\"Add assignee\">\n                  <MIconButton sx={{ p: 1, ml: 0.5, border: (theme) => `dashed 1px ${theme.palette.divider}` }}>\n                    <Icon icon={plusFill} width={20} height={20} />\n                  </MIconButton>\n                </Tooltip>\n              </Stack>\n            </Stack>\n\n            <Stack direction=\"row\" alignItems=\"center\">\n              <LabelStyle> Due date</LabelStyle>\n              <>\n                {startTime && endTime ? (\n                  <DisplayTime\n                    startTime={startTime}\n                    endTime={endTime}\n                    isSameDays={isSameDays}\n                    isSameMonths={isSameMonths}\n                    onOpenPicker={onOpenPicker}\n                    sx={{ typography: 'body2' }}\n                  />\n                ) : (\n                  <Tooltip title=\"Add assignee\">\n                    <MIconButton\n                      onClick={onOpenPicker}\n                      sx={{\n                        p: 1,\n                        ml: 0.5,\n                        border: (theme) => `dashed 1px ${theme.palette.divider}`\n                      }}\n                    >\n                      <Icon icon={plusFill} width={20} height={20} />\n                    </MIconButton>\n                  </Tooltip>\n                )}\n\n                <MobileDateRangePicker\n                  open={openPicker}\n                  onClose={onClosePicker}\n                  onOpen={onOpenPicker}\n                  value={dueDate}\n                  onChange={onChangeDueDate}\n                  renderInput={() => {}}\n                />\n              </>\n            </Stack>\n\n            <Stack direction=\"row\" alignItems=\"center\">\n              <LabelStyle>Prioritize</LabelStyle>\n              <TextField\n                fullWidth\n                select\n                size=\"small\"\n                value={prioritize}\n                onChange={handleChangePrioritize}\n                sx={{\n                  '& svg': { display: 'none' },\n                  '& fieldset': { display: 'none' },\n                  '& .MuiSelect-select': { p: 0, display: 'flex', alignItems: 'center' }\n                }}\n              >\n                {PRIORITIZES.map((option) => (\n                  <MenuItem key={option} value={option}>\n                    <Box\n                      sx={{\n                        mr: 1,\n                        width: 14,\n                        height: 14,\n                        borderRadius: 0.5,\n                        bgcolor: 'error.main',\n                        ...(option === 'low' && { bgcolor: 'info.main' }),\n                        ...(option === 'medium' && { bgcolor: 'warning.main' })\n                      }}\n                    />\n                    <Typography variant=\"body2\" sx={{ textTransform: 'capitalize' }}>\n                      {option}\n                    </Typography>\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Stack>\n\n            <Stack direction=\"row\">\n              <LabelStyle sx={{ mt: 2 }}>Description</LabelStyle>\n              <OutlinedInput\n                fullWidth\n                multiline\n                rows={3}\n                size=\"small\"\n                placeholder=\"Task name\"\n                value={description}\n                sx={{ typography: 'body2' }}\n              />\n            </Stack>\n\n            <Stack direction=\"row\">\n              <LabelStyle sx={{ mt: 2 }}>Attachments</LabelStyle>\n              <Stack direction=\"row\" flexWrap=\"wrap\">\n                <KanbanTaskAttachments attachments={attachments} />\n              </Stack>\n            </Stack>\n          </Stack>\n\n          {comments.length > 0 && <KanbanTaskCommentList comments={comments} />}\n        </Scrollbar>\n\n        <Divider />\n\n        <KanbanTaskCommentInput />\n      </Drawer>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Icon } from '@iconify/react';\nimport checkmarkCircle2Outline from '@iconify/icons-eva/checkmark-circle-2-outline';\nimport radioButtonOffOutline from '@iconify/icons-eva/radio-button-off-outline';\n// material\nimport { Paper, Typography, Box, Checkbox } from '@mui/material';\n//\nimport KanbanTaskDetails from './KanbanTaskDetails';\n\n// ----------------------------------------------------------------------\n\nKanbanTaskCard.propTypes = {\n  card: PropTypes.object,\n  index: PropTypes.number,\n  onDeleteTask: PropTypes.func\n};\n\nexport default function KanbanTaskCard({ card, onDeleteTask, index }) {\n  const { name, attachments } = card;\n  const [openDetails, setOpenDetails] = useState(false);\n  const [completed, setCompleted] = useState(card.completed);\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleChangeComplete = (event) => {\n    setCompleted(event.target.checked);\n  };\n\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {(provided) => (\n        <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n          <Paper\n            sx={{\n              px: 2,\n              width: 1,\n              position: 'relative',\n              boxShadow: (theme) => theme.customShadows.z1,\n              '&:hover': {\n                boxShadow: (theme) => theme.customShadows.z16\n              },\n              ...(attachments.length > 0 && {\n                pt: 2\n              })\n            }}\n          >\n            <Box onClick={handleOpenDetails} sx={{ cursor: 'pointer' }}>\n              {attachments.length > 0 && (\n                <Box\n                  sx={{\n                    pt: '60%',\n                    borderRadius: 1,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    transition: (theme) =>\n                      theme.transitions.create('opacity', {\n                        duration: theme.transitions.duration.shortest\n                      }),\n                    ...(completed && {\n                      opacity: 0.48\n                    })\n                  }}\n                >\n                  <Box\n                    component=\"img\"\n                    src={attachments[0]}\n                    sx={{ position: 'absolute', top: 0, width: 1, height: 1 }}\n                  />\n                </Box>\n              )}\n\n              <Typography\n                noWrap\n                variant=\"subtitle2\"\n                sx={{\n                  py: 3,\n                  pl: 5,\n                  transition: (theme) =>\n                    theme.transitions.create('opacity', {\n                      duration: theme.transitions.duration.shortest\n                    }),\n                  ...(completed && { opacity: 0.48 })\n                }}\n              >\n                {name}\n              </Typography>\n            </Box>\n\n            <Checkbox\n              disableRipple\n              checked={completed}\n              icon={<Icon icon={radioButtonOffOutline} />}\n              checkedIcon={<Icon icon={checkmarkCircle2Outline} />}\n              onChange={handleChangeComplete}\n              sx={{ position: 'absolute', bottom: 15 }}\n            />\n          </Paper>\n\n          <KanbanTaskDetails\n            card={card}\n            isOpen={openDetails}\n            onClose={handleCloseDetails}\n            onDeleteTask={() => onDeleteTask(card.id)}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState, useEffect } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreHorizontalFill from '@iconify/icons-eva/more-horizontal-fill';\n// material\nimport { Stack, OutlinedInput, MenuItem, Box, Typography } from '@mui/material';\n//\nimport MenuPopover from '../../MenuPopover';\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nKanbanColumnToolBar.propTypes = {\n  columnName: PropTypes.string,\n  onDelete: PropTypes.func,\n  onUpdate: PropTypes.func\n};\n\nexport default function KanbanColumnToolBar({ columnName, onDelete, onUpdate }) {\n  const anchorRef = useRef(null);\n  const renameRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(columnName);\n\n  useEffect(() => {\n    if (open) {\n      if (renameRef !== null) {\n        renameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickRename = () => {\n    handleClose();\n  };\n\n  const handleChangeColumnName = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleUpdateColumn = (event) => {\n    if (event.key === 'Enter') {\n      renameRef.current.blur();\n      onUpdate(event.target.value);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1} sx={{ pt: 3 }}>\n        <OutlinedInput\n          inputRef={renameRef}\n          size=\"small\"\n          placeholder=\"Section name\"\n          value={value}\n          onChange={handleChangeColumnName}\n          onKeyUp={handleUpdateColumn}\n          sx={{\n            typography: 'h6',\n            fontWeight: 'fontWeightBold',\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'transparent'\n            }\n          }}\n        />\n\n        <MIconButton ref={anchorRef} size=\"small\" onClick={handleOpen} color={open ? 'inherit' : 'default'}>\n          <Icon icon={moreHorizontalFill} width={20} height={20} />\n        </MIconButton>\n      </Stack>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ py: 1, width: 'auto' }}>\n        <MenuItem onClick={handleClickRename} sx={{ py: 0.75, px: 1.5 }}>\n          <Box component={Icon} icon={editFill} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\n          <Typography variant=\"body2\">Rename section</Typography>\n        </MenuItem>\n        <MenuItem onClick={onDelete} sx={{ py: 0.75, px: 1.5 }}>\n          <Box component={Icon} icon={trash2Outline} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\n          <Typography variant=\"body2\">Delete section</Typography>\n        </MenuItem>\n      </MenuPopover>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n// material\nimport { Paper, Stack, Button } from '@mui/material';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { deleteColumn, updateColumn, addTask, deleteTask } from '../../../redux/slices/kanban';\n//\nimport KanbanTaskCard from './KanbanTaskCard';\nimport KanbanColumnToolBar from './KanbanColumnToolBar';\nimport KanbanAddTask from './KanbanTaskAdd';\n\n// ----------------------------------------------------------------------\n\nKanbanColumn.propTypes = {\n  column: PropTypes.object,\n  index: PropTypes.number\n};\n\nexport default function KanbanColumn({ column, index }) {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { board } = useSelector((state) => state.kanban);\n  const [open, setOpen] = useState(false);\n\n  const { name, cardIds, id } = column;\n\n  const handleOpenAddTask = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleCloseAddTask = () => {\n    setOpen(false);\n  };\n\n  const handleDeleteTask = (cardId) => {\n    dispatch(deleteTask({ cardId, columnId: id }));\n    enqueueSnackbar('Delete success', { variant: 'success' });\n  };\n\n  const handleUpdateColumn = async (newName) => {\n    try {\n      if (newName !== name) {\n        dispatch(updateColumn(id, { ...column, name: newName }));\n        enqueueSnackbar('Update success', { variant: 'success' });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteColumn = async () => {\n    try {\n      dispatch(deleteColumn(id));\n      enqueueSnackbar('Delete success', { variant: 'success' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleAddTask = (task) => {\n    dispatch(addTask({ card: task, columnId: id }));\n    enqueueSnackbar('Add success', { variant: 'success' });\n    handleCloseAddTask();\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <Paper\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          variant=\"outlined\"\n          sx={{ px: 2, bgcolor: 'grey.5008' }}\n        >\n          <Stack spacing={3} {...provided.dragHandleProps}>\n            <KanbanColumnToolBar\n              columnId={id}\n              columnName={name}\n              onDelete={handleDeleteColumn}\n              onUpdate={handleUpdateColumn}\n            />\n\n            <Droppable droppableId={id} type=\"task\">\n              {(provided) => (\n                <Stack ref={provided.innerRef} {...provided.droppableProps} spacing={2} width={280}>\n                  {cardIds.map((cardId, index) => {\n                    const card = board?.cards[cardId];\n                    return <KanbanTaskCard key={cardId} onDeleteTask={handleDeleteTask} card={card} index={index} />;\n                  })}\n                  {provided.placeholder}\n                </Stack>\n              )}\n            </Droppable>\n\n            <Stack spacing={2} sx={{ pb: 3 }}>\n              {open && <KanbanAddTask onAddTask={handleAddTask} onCloseAddTask={handleCloseAddTask} />}\n\n              <Button\n                fullWidth\n                size=\"large\"\n                color=\"inherit\"\n                startIcon={<Icon icon={plusFill} width={20} height={20} />}\n                onClick={handleOpenAddTask}\n                sx={{ fontSize: 14 }}\n              >\n                Add Task\n              </Button>\n            </Stack>\n          </Stack>\n        </Paper>\n      )}\n    </Draggable>\n  );\n}\n","import { useState, useRef, useEffect } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack';\nimport plusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { OutlinedInput, Paper, Button, ClickAwayListener } from '@mui/material';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { createColumn } from '../../../redux/slices/kanban';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumnAdd() {\n  const nameRef = useRef(null);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState('');\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (open) {\n      if (nameRef !== null) {\n        nameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleCreateColumn = async () => {\n    try {\n      if (name) {\n        dispatch(createColumn({ name }));\n        enqueueSnackbar('Create section success', { variant: 'success' });\n        setName('');\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleCreateColumn();\n    }\n  };\n\n  return (\n    <Paper sx={{ minWidth: 280, width: 280 }}>\n      {!open && (\n        <Button\n          fullWidth\n          size=\"large\"\n          color=\"inherit\"\n          variant=\"outlined\"\n          startIcon={<Icon icon={plusFill} width={20} height={20} />}\n          onClick={handleOpen}\n        >\n          Add section\n        </Button>\n      )}\n\n      {open && (\n        <ClickAwayListener onClickAway={handleCreateColumn}>\n          <OutlinedInput\n            fullWidth\n            placeholder=\"New section\"\n            inputRef={nameRef}\n            value={name}\n            onChange={handleChangeName}\n            onKeyUp={handleKeyUp}\n            sx={{ typography: 'h6' }}\n          />\n        </ClickAwayListener>\n      )}\n    </Paper>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n// material\nimport { Container, Stack, Skeleton, Grid } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getBoard, persistColumn, persistCard } from '../../redux/slices/kanban';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { KanbanColumn, KanbanColumnAdd } from '../../components/_dashboard/kanban';\n\n// ----------------------------------------------------------------------\n\nconst SkeletonLoad = (\n  <>\n    {[...Array(3)].map((_, index) => (\n      <Grid item xs={12} md={3} key={index}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '115%', borderRadius: 2 }} />\n      </Grid>\n    ))}\n  </>\n);\n\nexport default function Kanban() {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { board } = useSelector((state) => state.kanban);\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  const onDragEnd = (result) => {\n    // Reorder card\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) return;\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(board.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      dispatch(persistColumn(newColumnOrder));\n      enqueueSnackbar('Update success', { variant: 'success' });\n      return;\n    }\n\n    const start = board.columns[source.droppableId];\n    const finish = board.columns[destination.droppableId];\n\n    if (start.id === finish.id) {\n      const updatedCardIds = [...start.cardIds];\n      updatedCardIds.splice(source.index, 1);\n      updatedCardIds.splice(destination.index, 0, draggableId);\n\n      const updatedColumn = {\n        ...start,\n        cardIds: updatedCardIds\n      };\n\n      dispatch(\n        persistCard({\n          columns: {\n            ...board.columns,\n            [updatedColumn.id]: updatedColumn\n          }\n        })\n      );\n\n      return;\n    }\n\n    const startCardIds = [...start.cardIds];\n    startCardIds.splice(source.index, 1);\n    const updatedStart = {\n      ...start,\n      cardIds: startCardIds\n    };\n\n    const finishCardIds = [...finish.cardIds];\n    finishCardIds.splice(destination.index, 0, draggableId);\n    const updatedFinish = {\n      ...finish,\n      cardIds: finishCardIds\n    };\n\n    dispatch(\n      persistCard({\n        columns: {\n          ...board.columns,\n          [updatedStart.id]: updatedStart,\n          [updatedFinish.id]: updatedFinish\n        }\n      })\n    );\n    enqueueSnackbar('Update success', { variant: 'success' });\n  };\n\n  return (\n    <Page title=\"Kanban | Minimal-UI\" sx={{ height: '100%' }}>\n      <Container maxWidth={false} sx={{ height: '100%' }}>\n        <HeaderBreadcrumbs\n          heading=\"Kanban\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root\n            },\n            { name: 'Kanban' }\n          ]}\n        />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n            {(provided) => (\n              <Stack\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                spacing={3}\n                sx={{ height: 'calc(100% - 32px)', overflowY: 'hidden' }}\n              >\n                {board?.columnOrder?.map((columnId, index) => {\n                  const column = board.columns[columnId];\n                  return <KanbanColumn index={index} key={columnId} column={column} />;\n                })}\n\n                {!board?.columnOrder.length && SkeletonLoad}\n\n                {provided.placeholder}\n                <KanbanColumnAdd />\n              </Stack>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}