{"version":3,"sources":["components/authentication/register/RegisterForm.js","pages/authentication/Register.js"],"names":["RegisterForm","navigate","useNavigate","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","username","formik","useFormik","initialValues","validationSchema","onSubmit","values","setErrors","axios","post","process","phone","country","gender","agent","then","res","data","flag","message","config","top","duration","success","setTimeout","catch","err","afterSubmit","response","error","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","prev","icon","eyeFill","eyeOffFill","LoadingButton","size","variant","loading","RootStyle","styled","Page","theme","breakpoints","up","display","SectionStyle","Card","width","maxWidth","flexDirection","justifyContent","margin","ContentStyle","minHeight","padding","Register","title","AuthLayout","Link","underline","component","RouterLink","to","PATH_AUTH","login","Typography","sx","px","mt","mb","alt","src","Container","Box","alignItems","flexGrow","gutterBottom","textAlign"],"mappings":"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","file":"static/js/38.b4039b32.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { message } from 'antd'\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { Stack, TextField, IconButton, InputAdornment, Alert } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport user from 'src/redux/slices/user';\n// hooks\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().min(5, 'Too Short!').required('Password is required'),\n    username: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Username required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async (values, { setErrors }) => {\n      axios\n        .post(`${process.env.REACT_APP_SERVER_URL}/signup`, {\n          phone: '',\n          country: '',\n          username: values.username,\n          email: values.email,\n          password: values.password,\n          firstName: values.lastName,\n          lastName: values.lastName,\n          gender: '',\n          agent: ''\n        })\n        .then((res) => {\n          if (res.data.flag === 'success') {\n            message.config({ top: 100, duration: 5, });\n            message.success('You have successfully registered.');\n            setTimeout(() => {\n              navigate('/auth/login')\n            }, 500);\n          }\n        })\n        .catch((err) => {\n          setErrors({ afterSubmit: err.response.data.error });\n        });\n    }\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"First name\"\n              {...getFieldProps('firstName')}\n              error={Boolean(touched.firstName && errors.firstName)}\n              helperText={touched.firstName && errors.firstName}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Last name\"\n              {...getFieldProps('lastName')}\n              error={Boolean(touched.lastName && errors.lastName)}\n              helperText={touched.lastName && errors.lastName}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            label=\"Username\"\n            {...getFieldProps('username')}\n            error={Boolean(touched.username && errors.username)}\n            helperText={touched.username && errors.username}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting} >\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Link, Container, Typography } from '@mui/material';\n// hooks\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// layouts\nimport AuthLayout from '../../layouts/AuthLayout';\n// components\nimport Page from '../../components/Page';\nimport { MHidden } from '../../components/@material-extend';\nimport { RegisterForm } from '../../components/authentication/register';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n\n  return (\n    <RootStyle title=\"Register\">\n      <AuthLayout>\n        Already have an account? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\n          Login\n        </Link>\n      </AuthLayout>\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n          <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n            Welcome to sign up!\n          </Typography>\n          <img alt=\"register\" src=\"/static/illustrations/illustration_register.png\" />\n        </SectionStyle>\n      </MHidden>\n      <Container>\n        <ContentStyle>\n          <Box sx={{ mb: 5, display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ flexGrow: 1 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                Please enter your infomation.\n              </Typography>\n            </Box>\n          </Box>\n\n          <RegisterForm />\n          \n          <MHidden width=\"smUp\">\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\n              Already have an account?&nbsp;\n              <Link to={PATH_AUTH.login} component={RouterLink}>\n                Login\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}